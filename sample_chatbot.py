# -*- coding: utf-8 -*-
"""Sample Chatbot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ssSWXKszKOnmrpnZonupSBm3ZGquvgBH

# **CHATBOT USING STATIC DATASET**

**Importing Useful** **Libraries**
"""

#for importing and manuplating data
import numpy as np 
import pandas as pd 
import string

#for language understanding, fitting model
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.tree import DecisionTreeClassifier
from sklearn.feature_extraction.text import TfidfTransformer,TfidfVectorizer
from sklearn.pipeline import Pipeline

"""**Importing Dataset From Drive**"""


#reading dataset into variable 'df'
df = pd.read_csv('static_data.csv')

#reading dataset into variable 'df'
small_talks = pd.read_csv('small_talk.csv')


"""**Working on Healthcare Dataset**"""

#removing signs and symptoms column

df.drop('Sign and Symptom', inplace=True, axis=1)



#renaming columns
#disease => User
#Precautions => Chatbot

df.columns=['User','ChatBot']


#checking for empty columns

df['ChatBot'].isnull().sum()

#removing rows with empty columns

df = df.dropna()

"""**Combining both Datasets**"""

frames = [df, small_talks]

result = pd.concat(frames)

#reviewing the final dataset


#function to remove punctuation
#converts the input to lowercase

def cleaner(x):
  return [a for a in (''.join([a for a in x if a not in string.punctuation])).lower().split()]

#Creating a pipeline to facilitate conversation
#Using Decision Tree for fitting data

Pipe = Pipeline([
    ('bow',CountVectorizer(analyzer=cleaner)),
    ('tfidf',TfidfTransformer()),
    ('classifier',DecisionTreeClassifier())
])

#Fitting our dataset in the pipeline

Pipe.fit(result['User'],result['ChatBot'])

"""***Talking to chatbot***"""

input = ""
input = 'MALARIA'

output = Pipe.predict([input])[0]


"""Random Tests"""

Pipe.predict(['can you help me?'])[0]

Pipe.predict(['Who are you?'])[0]

Pipe.predict(['Conjunctivitis'])[0]

